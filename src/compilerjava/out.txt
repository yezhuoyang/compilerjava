define i64 @main  {
main_entry_1:
   %t_1 = mul 3 4
   %t_1 = add %t_1 4
   %t_2 = alloc %t_1
   store 3 %t_2
   %t_3 = add %t_2 4
   %t_4 = add %t_2 %t_1
   jump main_for_cond_1
main_for_cond_1:
   %t_5 = slt %t_3 %t_4
   br %t_5 main_for_body_1 main_for_merge_1
main_for_merge_1:
   %a_1 = move %t_2
   %t_6 = mul 0 4
   %t_7 = add %t_6 4
   %t_8 = add %a_1 %t_7
   %t_9 = load %t_8
   %t_10 = load %t_9
   %t_11 = move %t_10
   ret %t_11
main_for_body_1:
   %t_12 = mul 3 4
   %t_12 = add %t_12 4
   %t_13 = alloc %t_12
   store 3 %t_13
   store %t_13 %t_3
   jump main_for_step_1
main_for_step_1:
   %t_14 = add %t_3 4
   %t_3 = move %t_14
   jump main_for_cond_1
}

define i64 @__init  {
__init_entry_1:
   %t_15 = call main 
   %t_16 = move %t_15
   ret %t_16
}

